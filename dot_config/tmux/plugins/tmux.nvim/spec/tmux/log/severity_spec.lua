describe("log severity", function()
    local severity

    setup(function()
        severity = require("tmux.log.severity")
    end)

    it("check validate", function()
        assert.is_false(severity.validate(nil))
        assert.is_false(severity.validate(1))
        assert.is_false(severity.validate(""))
        assert.is_false(severity.validate("blub"))
        assert.is_false(severity.validate({}))

        assert.is_true(severity.validate("disabled"))
        assert.is_true(severity.validate("debug"))
        assert.is_true(severity.validate("information"))
        assert.is_true(severity.validate("warning"))
        assert.is_true(severity.validate("error"))
    end)

    it("check invalid severities", function()
        assert.is_false(severity.check(nil, "warning"))
        assert.is_false(severity.check(1, "warning"))
        assert.is_false(severity.check("", "warning"))
        assert.is_false(severity.check("blub", "warning"))
        assert.is_false(severity.check({}, "warning"))

        assert.is_false(severity.check("warning", nil))
        assert.is_false(severity.check("warning", 1))
        assert.is_false(severity.check("warning", ""))
        assert.is_false(severity.check("warning", "blub"))
        assert.is_false(severity.check("warning", {}))
    end)

    it("check severity barriers", function()
        assert.is_false(severity.check("disabled", "disabled"))
        assert.is_false(severity.check("disabled", "debug"))
        assert.is_false(severity.check("disabled", "information"))
        assert.is_false(severity.check("disabled", "warning"))
        assert.is_false(severity.check("disabled", "error"))

        assert.is_false(severity.check("debug", "disabled"))
        assert.is_true(severity.check("debug", "debug"))
        assert.is_true(severity.check("debug", "information"))
        assert.is_true(severity.check("debug", "warning"))
        assert.is_true(severity.check("debug", "error"))

        assert.is_false(severity.check("information", "disabled"))
        assert.is_false(severity.check("information", "debug"))
        assert.is_true(severity.check("information", "information"))
        assert.is_true(severity.check("information", "warning"))
        assert.is_true(severity.check("information", "error"))

        assert.is_false(severity.check("warning", "disabled"))
        assert.is_false(severity.check("warning", "debug"))
        assert.is_false(severity.check("warning", "information"))
        assert.is_true(severity.check("warning", "warning"))
        assert.is_true(severity.check("warning", "error"))

        assert.is_false(severity.check("error", "disabled"))
        assert.is_false(severity.check("error", "debug"))
        assert.is_false(severity.check("error", "information"))
        assert.is_false(severity.check("error", "warning"))
        assert.is_true(severity.check("error", "error"))
    end)
end)
